# Copyright 2023 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: servicebinding-mapping-externalsecrets
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: externalsecretmappings.x-mapping.servicebinding.io
spec:
  group: x-mapping.servicebinding.io
  names:
    kind: ExternalSecretMapping
    listKind: ExternalSecretMappingList
    plural: externalsecretmappings
    singular: externalsecretmapping
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.binding.name
      name: Secret
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExternalSecretMapping is the Schema for the mapping API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExternalSecretMappingSpec defines the desired state of ExternalSecretMapping
            type: object
          status:
            description: ExternalSecretMappingStatus defines the observed state of
              ExternalSecretMapping
            properties:
              binding:
                description: Binding exposes the projected secret for this mapping
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              conditions:
                description: Conditions are the conditions of this mapping
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the mapping
                  that was last processed by the controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: servicebinding-mapping-es-controller-manager
  namespace: servicebinding-mapping-externalsecrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: servicebinding-mapping-es-leader-election-role
  namespace: servicebinding-mapping-externalsecrets
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: servicebinding-mapping-es-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - external-secrets.io
  resources:
  - externalsecrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - x-mapping.servicebinding.io
  resources:
  - externalsecretmappings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - x-mapping.servicebinding.io
  resources:
  - externalsecretmappings/finalizers
  verbs:
  - update
- apiGroups:
  - x-mapping.servicebinding.io
  resources:
  - externalsecretmappings/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: servicebinding-mapping-es-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: servicebinding-mapping-es-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: servicebinding-mapping-es-leader-election-rolebinding
  namespace: servicebinding-mapping-externalsecrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: servicebinding-mapping-es-leader-election-role
subjects:
- kind: ServiceAccount
  name: servicebinding-mapping-es-controller-manager
  namespace: servicebinding-mapping-externalsecrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: servicebinding-mapping-es-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: servicebinding-mapping-es-manager-role
subjects:
- kind: ServiceAccount
  name: servicebinding-mapping-es-controller-manager
  namespace: servicebinding-mapping-externalsecrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: servicebinding-mapping-es-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: servicebinding-mapping-es-proxy-role
subjects:
- kind: ServiceAccount
  name: servicebinding-mapping-es-controller-manager
  namespace: servicebinding-mapping-externalsecrets
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: a359ffaf.servicebinding.io
kind: ConfigMap
metadata:
  name: servicebinding-mapping-es-manager-config
  namespace: servicebinding-mapping-externalsecrets
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: servicebinding-mapping-es-controller-manager-metrics-service
  namespace: servicebinding-mapping-externalsecrets
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: servicebinding-mapping-es-webhook-service
  namespace: servicebinding-mapping-externalsecrets
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: servicebinding-mapping-es-controller-manager
  namespace: servicebinding-mapping-externalsecrets
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        image: ko://github.com/servicebinding/mapping-externalsecrets
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.11.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: servicebinding-mapping-es-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: servicebinding-mapping-es-serving-cert
  namespace: servicebinding-mapping-externalsecrets
spec:
  dnsNames:
  - servicebinding-mapping-es-webhook-service.servicebinding-mapping-externalsecrets.svc
  - servicebinding-mapping-es-webhook-service.servicebinding-mapping-externalsecrets.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: servicebinding-mapping-es-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: servicebinding-mapping-es-selfsigned-issuer
  namespace: servicebinding-mapping-externalsecrets
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: servicebinding-mapping-externalsecrets/servicebinding-mapping-es-serving-cert
    webhook.servicebinding.io/dynamic-rules: ""
  name: servicebinding-mapping-es-admission-projector
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: servicebinding-mapping-es-webhook-service
      namespace: servicebinding-mapping-externalsecrets
      path: /interceptor
  failurePolicy: Fail
  name: interceptor.servicebinding.io
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - servicebinding-mapping-externalsecrets
      - kube-system
  reinvocationPolicy: IfNeeded
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: servicebinding-mapping-externalsecrets/servicebinding-mapping-es-serving-cert
    webhook.servicebinding.io/dynamic-rules: ""
  name: servicebinding-mapping-es-trigger
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: servicebinding-mapping-es-webhook-service
      namespace: servicebinding-mapping-externalsecrets
      path: /trigger
  failurePolicy: Ignore
  name: trigger.servicebinding.io
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - servicebinding-mapping-externalsecrets
      - kube-system
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: servicebinding-mapping-externalsecrets/servicebinding-mapping-es-serving-cert
  name: servicebinding-mapping-es-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: servicebinding-mapping-es-webhook-service
      namespace: servicebinding-mapping-externalsecrets
      path: /validate-x-mapping-servicebinding-io-v1alpha1-externalsecretmapping
  failurePolicy: Fail
  name: veso.xmapping.servicebinding.kb.io
  rules:
  - apiGroups:
    - x-mapping.servicebinding.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - externalsecretmappings
  sideEffects: None
